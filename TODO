* flow-based architecture for machine, request-based architecture for data:
  - machine/rebuild: enum proc not flow-based (normal, rewrite code to use ACTION_ENUM)
  - cache/cache: get machine length not flow-based (not important, subject for deprecation)
  - machine/pool: pool get parameter not flow-based (not important for now, another approach?)

* m4 macro collection
  - write m4 macro for balancer machine
  - shop_pass
  - shop_call
  - shop_return

- machine data/query (stubs for data querying and using it in flow)
  - move downgrade request to api.c
  - write upgrade request

- broken mphf machine rebuild: allocator machine not used in chain, coz structs unable to talk with FAST api. Need some api/switch, now!

- join physical and logical length into one
- machine 'data/buffer'

- review indexes and caches (+ data free routines)
- data 'refcount_t'
- data 'timerange_t'

- fix broken slice_t hash_dump's
- rewrite file_t to use fd_t

- action definitions via m4 and documentation
- rewrite up- and down-grade request to use m4'ed definitions

- review code for multi-threading support, document machine's thread-safety capabilities
- machine thread_pool
- machine multi_request

- new test suite, as benchmarks, deprecate check
- data 'range_t', 'multiselect_t' and matching routines
- machine queue
- mphf nelements_step with percents + remove from mphf to another machine

- pcre
- libev
