AC_DEFUN([FROZEN_MACHINE],[
	define([machine_name],translit($1,_,-))
	define([machine_dir],translit($2,/,_))
	define([machine_action],ifelse($3,yes,disable,enable))
	define([machine_libname],ifelse($5,,$1,$5))
	AC_ARG_ENABLE(machine$1,AS_HELP_STRING([--]machine_action()[-machine-]machine_name(),machine_action()[ machine ]machine_name()))
	
	if test "$3" = "yes"; then
		if test "${enable_machine$1}" = "yes"; then
			enable_machine$1="no"
		else
			enable_machine$1="yes"
		fi
	fi
	
	if test "${enable_machine$1}" = "yes"; then
		MACHINE_DIR_$1="$2"
		MACHINE_DEP_$1="$4"
		dnl MACHINE_OBJECTS_[]machine_dir()="$MACHINE_OBJECTS_[]machine_dir() libfrozen_machine_$1_la-$1.lo"
		MACHINE_SELECTED="$MACHINE_SELECTED $1"

		dnl AC_SUBST([MACHINE_OBJECTS_]machine_dir())
	fi
	
	if test "$MACHINE_MAKEFILE_[]machine_dir()" = ""; then
		GEN_MAKEFILES="$GEN_MAKEFILES src/libfrozen/machines/$2/Makefile"
		MACHINE_DIST_DIRS="$MACHINE_DIST_DIRS $2"
		AC_SUBST([MACHINE_DIST_DIRS])
		MACHINE_MAKEFILE_[]machine_dir=yes
		
		MACHINE_LIBS_SELECTED="$MACHINE_LIBS_SELECTED $2/libfrozen_machine_[]machine_libname().la"
		AC_SUBST([MACHINE_LIBS_SELECTED])
	fi
])

AC_DEFUN([FROZEN_MACHINE_END],[
	MACHINE_SELECTED_DEPS=$MACHINE_SELECTED
	for m in $MACHINE_SELECTED; do
		eval m_deps="\$MACHINE_DEP_$m"
		for d in $m_deps; do
			MACHINE_SELECTED_DEPS=$( echo $MACHINE_SELECTED_DEPS | sed "s|$d|$d $m|" | sed "s|$m||" )
			# add this module after dependency and remove first occurence of module, leaving inserted
		done;
	done;
	for m in $MACHINE_SELECTED_DEPS; do
		eval m_folder="\$MACHINE_DIR_$m"
		MACHINE_DIRS="$MACHINE_DIRS $m_folder"
		MACHINE_DIRS=$(echo $MACHINE_DIRS | sed "s|$m_folder|REPLACEMEBACK|" | sed "s|$m_folder||g" | sed "s|REPLACEMEBACK|$m_folder|" )
		
	done;
	AC_SUBST([MACHINE_DIRS])
	
	machine_hdr_file=src/libfrozen/core/machine_selected.h
	echo "/* Autogenerated file. Don't edit */" > $machine_hdr_file
	echo "#ifndef MACHINE_SELECTED_H" >> $machine_hdr_file
	echo "#define MACHINE_SELECTED_H" >> $machine_hdr_file
	for h in $MACHINE_SELECTED; do
		echo "extern machine_t ${h}_proto;" >> $machine_hdr_file
	done;
	echo "#ifdef MACHINE_C" >> $machine_hdr_file
	echo "machine_t * machine_protos[[]] = {" >> $machine_hdr_file
	for h in $MACHINE_SELECTED; do
		h_rpl=$(echo $h | sed "s@-@_@g")
		echo "   &${h_rpl}_proto," >> $machine_hdr_file
	done;
	echo "};" >> $machine_hdr_file
	echo "size_t machine_protos_size = (sizeof(machine_protos)/sizeof(machine_protos[[0]]));" >> $machine_hdr_file
	echo "#endif" >> $machine_hdr_file
	
	echo "#endif" >> $machine_hdr_file
])

