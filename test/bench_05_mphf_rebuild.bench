{ class => "daemon/thread" },
{ class => "emitter", request = { machine = (machine_t)"mphf", request = { benchmark_function = "restart" } } },
{ class => "emitter", request = {
	request = { NULL },
	machine = (machine_t){
		{ class => "emitter", request = { machine = (machine_t)"mphf",
			request = {
				action => (action_t)"create",
				offset => (named_t){ name = "init_offset", data = (uint_t)"0" }
			}
		}},
		{ class => "emitter", request = { machine = (machine_t)"mphf",
			request = {
				action => (action_t)"write",
				offset => (named_t){ name = "init_offset" },
				key    => (slice_t){ input = (random_t)"", size = (uint_t)"10" },
				buffer => (raw_t){ length = (uint_t)"0" }
			}
		}}
	}
}, count => (uint_t)'100000' },
{ class => "emitter", request = { machine = (machine_t)"mphf", request = { benchmark_function = "print_long" } } },
{ class => "kill" },
NULL,
{ class => "benchmark", name => "mphf" },

{ class = "hash/murmur2_64", input = (hashkey_t)'key', output = (hashkey_t)'keyid' },
{
	class = "rebuild_monitor",
	reader = (machine_t)"mphf_rebuild_reader",
	writer = (machine_t)"mphf_rebuild_writer"
},
{
	class = "request/switch",
	data  = (named_t){
		name = "mphf_data",
		data = (allocator_fixed_t){
			item_size = (uint_t)"8",
			storage   = (file_t){ filename = "data_bench_mphf_data.dat" }
		}
	},
	rules = {
		{
			request = { action = (action_t)"create" },
			machine = (machine_t){
				{ class = "data/query", data = (named_t)"mphf_data" }
			}
		},
		{
			request = { action = (action_t)"read" },
			machine = (machine_t){
				{ class = "shop/pass", shop = (machine_t)"mphf_index" },
				
				{ class = "rebuild_reader", name = "mphf_rebuild_reader",
					req_read = {
						keyid  = (uint64_t)'0',
						buffer = (raw_t){ length = (uint_t)"0" },
						size   = (uint_t)"8"
					}
				},
				{ class = "data/query", data = (named_t)"mphf_data" },
				{
					class = "struct_unpack",
					structure = {
						keyid = { default = (uint64_t)'0' }
					}
				},
				{ class = "end" }
			}
		},
		{
			request = { action = (action_t)"write" },
			machine = (machine_t){
				{
					class = "struct_pack",
					structure = {
						keyid = { default = (uint64_t)'0' }
					}
				},
				{ class = "data/query", data = (named_t)"mphf_data" },
				
				{ class = "rebuild_writer", name = "mphf_rebuild_writer" },
				{ class = "shop/pass",  shop = (machine_t)"mphf_index" },
				{ class = "end" }
			}
		}
	}
},
{ class = "end" },

NULL,
{
	name = "mphf_index",
	class = "mphf",
	type  = "chm_imp",
	value_size = (uint_t)"4",
	nelements_min  = (uint64_t)'50000',
	nelements_step = (uint64_t)'80000',
	data_g = (file_t){ filename = "data_bench_mphf_g.dat" },
	data_e = (file_t){ filename = "data_bench_mphf_v.dat" },
	data_v = (file_t){ filename = "data_bench_mphf_e.dat" },
	input  = (hashkey_t)"keyid",
	output = (hashkey_t)"offset"
},
{ class = "shop/return" }
