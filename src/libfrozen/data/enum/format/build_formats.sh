#!/bin/sh

keys=`grep "FORMAT([a-z0-9_]*)" -roha ./src/ | sed "s/FORMAT(//g" | sed "s/)//g"  | LC_ALL=C sort -u`

folder=src/libfrozen/data/enum/format
format_h=$folder/format.h
format_tmp1=$folder/format.tmp1
format_tmp2=$folder/format.tmp2
format_tmp3=$folder/format.tmp3

for key in $keys; do
	value=`echo "$key" | awk '
	BEGIN{ 
		for(i=0;i<=255;i++){_ord[sprintf("%c",i)]=i;};
	}
	{
		sum=0;
		split($0,arr,"");
		for(z in arr){
			sum += _ord[arr[z]]*z*z;
		};
		print sum
	}'`
	
	echo "#define FORMAT_VALUE_$key $value"     >> $format_tmp1
	echo "      FORMAT_$key = FORMAT_VALUE_$key, "  >> $format_tmp2
	echo "      { \"$key\", FORMAT_VALUE_$key }, "    >> $format_tmp3
	
	eval exists="\$COLLIDE_$value"
	if [ "x$exists" != "x" ]; then
		echo "echo 'ERROR: Static format collision: $key <=> $exists: $value <=> $value'; exit";
		rm $format_h $format_tmp1 $format_tmp2 $format_tmp3 2>/dev/null
		exit;
	fi
	eval "COLLIDE_${value}=$key"
done

echo "/* Autogenerated file. Don't edit */" > $format_h
echo "#ifndef FORMATS_H" >> $format_h
echo "#define FORMATS_H" >> $format_h
	echo "#define FORMAT(value)         FORMAT_VALUE_##value" >> $format_h
	cat $format_tmp1 >> $format_h
	echo "typedef enum format_t {" >> $format_h
		cat $format_tmp2 >> $format_h
	echo "} format_t;" >> $format_h
echo "#endif" >> $format_h
echo "" >> $format_h
echo "#ifdef FORMAT_C" >> $format_h
	echo "keypair_t formats[] = {" >> $format_h
		cat $format_tmp3 >> $format_h
	echo "      { NULL, 0 }  " >> $format_h
	echo "};" >> $format_h
echo "#endif" >> $format_h

rm $format_tmp1 $format_tmp2 $format_tmp3 2>/dev/null
