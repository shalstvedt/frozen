/* Autogenerated file. Don't edit */
#ifndef HASHKEYS_H
#define HASHKEYS_H
#define HK_VALUE_action 9952
#define HK_VALUE_action_global 85125
#define HK_VALUE_action_one 40721
#define HK_VALUE_action_perfork 109920
#define HK_VALUE_action_request 112256
#define HK_VALUE_action_request_global 348981
#define HK_VALUE_action_request_one 226561
#define HK_VALUE_action_request_perfork 411712
#define HK_VALUE_addr 3221
#define HK_VALUE_after 6015
#define HK_VALUE_async 5881
#define HK_VALUE_backend 14474
#define HK_VALUE_before 9682
#define HK_VALUE_benchmark_function 227699
#define HK_VALUE_bind 3108
#define HK_VALUE_block_off 29437
#define HK_VALUE_block_size 41545
#define HK_VALUE_block_vid 29810
#define HK_VALUE_blocks 9928
#define HK_VALUE_body 3378
#define HK_VALUE_buffer 9745
#define HK_VALUE_buffer_size 54686
#define HK_VALUE_capture 15329
#define HK_VALUE_class 6119
#define HK_VALUE_clientid 21563
#define HK_VALUE_close 5895
#define HK_VALUE_config 9498
#define HK_VALUE_connect 15066
#define HK_VALUE_convert_from 70603
#define HK_VALUE_count 6256
#define HK_VALUE_create 9552
#define HK_VALUE_data 3084
#define HK_VALUE_default 15471
#define HK_VALUE_destination 55072
#define HK_VALUE_destroy 16170
#define HK_VALUE_dns_domain 40645
#define HK_VALUE_dns_ip 9752
#define HK_VALUE_dns_tstamp 42056
#define HK_VALUE_dump_last 31113
#define HK_VALUE_engine 9534
#define HK_VALUE_enum_method 53634
#define HK_VALUE_error 6209
#define HK_VALUE_exclusive 31143
#define HK_VALUE_extended 20940
#define HK_VALUE_fatal 5786
#define HK_VALUE_field 5659
#define HK_VALUE_filename 21157
#define HK_VALUE_folder 9747
#define HK_VALUE_force_async 53994
#define HK_VALUE_force_sync 41290
#define HK_VALUE_forced 9281
#define HK_VALUE_fork 3284
#define HK_VALUE_fork_only 31758
#define HK_VALUE_format 9917
#define HK_VALUE_function 22303
#define HK_VALUE_global 9415
#define HK_VALUE_go_template 53785
#define HK_VALUE_hash 3191
#define HK_VALUE_hash_ptr_end 68083
#define HK_VALUE_hash_ptr_inline 131665
#define HK_VALUE_hash_ptr_null 89234
#define HK_VALUE_headers 15245
#define HK_VALUE_homedir 15011
#define HK_VALUE_http_req 22064
#define HK_VALUE_http_resp 31264
#define HK_VALUE_icase 5739
#define HK_VALUE_identity 23282
#define HK_VALUE_ignore_errors 90804
#define HK_VALUE_index 6061
#define HK_VALUE_input 6325
#define HK_VALUE_insert 10222
#define HK_VALUE_item_sample 53559
#define HK_VALUE_item_size 30871
#define HK_VALUE_items 6097
#define HK_VALUE_key 1600
#define HK_VALUE_key1 2384
#define HK_VALUE_key2 2400
#define HK_VALUE_key3 2416
#define HK_VALUE_key4 2432
#define HK_VALUE_key_from 22189
#define HK_VALUE_key_out 15791
#define HK_VALUE_key_to 10016
#define HK_VALUE_keyid 5780
#define HK_VALUE_lazy 3530
#define HK_VALUE_length 9794
#define HK_VALUE_loop 3343
#define HK_VALUE_machine 14586
#define HK_VALUE_machine_e 28847
#define HK_VALUE_machine_g 29009
#define HK_VALUE_machine_v 30224
#define HK_VALUE_marker 9864
#define HK_VALUE_marker_data 52113
#define HK_VALUE_max_global 39928
#define HK_VALUE_max_perfork 54985
#define HK_VALUE_max_perinstance 130972
#define HK_VALUE_mode 3069
#define HK_VALUE_mode_global 52254
#define HK_VALUE_mode_perfork 70285
#define HK_VALUE_mountpoint 42967
#define HK_VALUE_multiply 23098
#define HK_VALUE_multithread 52579
#define HK_VALUE_n_initial 30097
#define HK_VALUE_name 3095
#define HK_VALUE_nelements 31592
#define HK_VALUE_nelements_min 87991
#define HK_VALUE_nelements_mul 89381
#define HK_VALUE_nelements_step 110732
#define HK_VALUE_newline 14847
#define HK_VALUE_notbol 9829
#define HK_VALUE_noteol 9877
#define HK_VALUE_offset 9978
#define HK_VALUE_offset_from 54684
#define HK_VALUE_offset_key 41762
#define HK_VALUE_offset_out 42814
#define HK_VALUE_offset_to 31048
#define HK_VALUE_output 10516
#define HK_VALUE_output_type 55817
#define HK_VALUE_parameter 30821
#define HK_VALUE_parameter_request 196377
#define HK_VALUE_pass_first 42778
#define HK_VALUE_path 3208
#define HK_VALUE_paused 9518
#define HK_VALUE_perlevel 21904
#define HK_VALUE_pool_interval 88331
#define HK_VALUE_port 3438
#define HK_VALUE_random 9791
#define HK_VALUE_read_size 30640
#define HK_VALUE_reader 9620
#define HK_VALUE_readonly 22762
#define HK_VALUE_real_offset 54467
#define HK_VALUE_regexp 10093
#define HK_VALUE_removed_items 88298
#define HK_VALUE_req_count 31695
#define HK_VALUE_req_read 20694
#define HK_VALUE_req_rebuild 53236
#define HK_VALUE_req_rebuild_destination 464804
#define HK_VALUE_req_rebuild_enable 216394
#define HK_VALUE_request 15756
#define HK_VALUE_ret 1562
#define HK_VALUE_retry 6411
#define HK_VALUE_retry_request 91119
#define HK_VALUE_return 10244
#define HK_VALUE_return_result 91189
#define HK_VALUE_return_to 31314
#define HK_VALUE_role 3146
#define HK_VALUE_rules 6045
#define HK_VALUE_script 10193
#define HK_VALUE_size 3249
#define HK_VALUE_source 9547
#define HK_VALUE_split 6115
#define HK_VALUE_string 9743
#define HK_VALUE_structure 31338
#define HK_VALUE_test 3411
#define HK_VALUE_tick_interval 88187
#define HK_VALUE_type 3224
#define HK_VALUE_url 1545
#define HK_VALUE_uuid 3130
#define HK_VALUE_value 5875
#define HK_VALUE_value_bits 41713
#define HK_VALUE_values 10015
#define HK_VALUE_verbose 14980
#define HK_VALUE_writer 10005
typedef enum hashkey_t {
      HK_action = HK_VALUE_action, 
      HK_action_global = HK_VALUE_action_global, 
      HK_action_one = HK_VALUE_action_one, 
      HK_action_perfork = HK_VALUE_action_perfork, 
      HK_action_request = HK_VALUE_action_request, 
      HK_action_request_global = HK_VALUE_action_request_global, 
      HK_action_request_one = HK_VALUE_action_request_one, 
      HK_action_request_perfork = HK_VALUE_action_request_perfork, 
      HK_addr = HK_VALUE_addr, 
      HK_after = HK_VALUE_after, 
      HK_async = HK_VALUE_async, 
      HK_backend = HK_VALUE_backend, 
      HK_before = HK_VALUE_before, 
      HK_benchmark_function = HK_VALUE_benchmark_function, 
      HK_bind = HK_VALUE_bind, 
      HK_block_off = HK_VALUE_block_off, 
      HK_block_size = HK_VALUE_block_size, 
      HK_block_vid = HK_VALUE_block_vid, 
      HK_blocks = HK_VALUE_blocks, 
      HK_body = HK_VALUE_body, 
      HK_buffer = HK_VALUE_buffer, 
      HK_buffer_size = HK_VALUE_buffer_size, 
      HK_capture = HK_VALUE_capture, 
      HK_class = HK_VALUE_class, 
      HK_clientid = HK_VALUE_clientid, 
      HK_close = HK_VALUE_close, 
      HK_config = HK_VALUE_config, 
      HK_connect = HK_VALUE_connect, 
      HK_convert_from = HK_VALUE_convert_from, 
      HK_count = HK_VALUE_count, 
      HK_create = HK_VALUE_create, 
      HK_data = HK_VALUE_data, 
      HK_default = HK_VALUE_default, 
      HK_destination = HK_VALUE_destination, 
      HK_destroy = HK_VALUE_destroy, 
      HK_dns_domain = HK_VALUE_dns_domain, 
      HK_dns_ip = HK_VALUE_dns_ip, 
      HK_dns_tstamp = HK_VALUE_dns_tstamp, 
      HK_dump_last = HK_VALUE_dump_last, 
      HK_engine = HK_VALUE_engine, 
      HK_enum_method = HK_VALUE_enum_method, 
      HK_error = HK_VALUE_error, 
      HK_exclusive = HK_VALUE_exclusive, 
      HK_extended = HK_VALUE_extended, 
      HK_fatal = HK_VALUE_fatal, 
      HK_field = HK_VALUE_field, 
      HK_filename = HK_VALUE_filename, 
      HK_folder = HK_VALUE_folder, 
      HK_force_async = HK_VALUE_force_async, 
      HK_force_sync = HK_VALUE_force_sync, 
      HK_forced = HK_VALUE_forced, 
      HK_fork = HK_VALUE_fork, 
      HK_fork_only = HK_VALUE_fork_only, 
      HK_format = HK_VALUE_format, 
      HK_function = HK_VALUE_function, 
      HK_global = HK_VALUE_global, 
      HK_go_template = HK_VALUE_go_template, 
      HK_hash = HK_VALUE_hash, 
      HK_hash_ptr_end = HK_VALUE_hash_ptr_end, 
      HK_hash_ptr_inline = HK_VALUE_hash_ptr_inline, 
      HK_hash_ptr_null = HK_VALUE_hash_ptr_null, 
      HK_headers = HK_VALUE_headers, 
      HK_homedir = HK_VALUE_homedir, 
      HK_http_req = HK_VALUE_http_req, 
      HK_http_resp = HK_VALUE_http_resp, 
      HK_icase = HK_VALUE_icase, 
      HK_identity = HK_VALUE_identity, 
      HK_ignore_errors = HK_VALUE_ignore_errors, 
      HK_index = HK_VALUE_index, 
      HK_input = HK_VALUE_input, 
      HK_insert = HK_VALUE_insert, 
      HK_item_sample = HK_VALUE_item_sample, 
      HK_item_size = HK_VALUE_item_size, 
      HK_items = HK_VALUE_items, 
      HK_key = HK_VALUE_key, 
      HK_key1 = HK_VALUE_key1, 
      HK_key2 = HK_VALUE_key2, 
      HK_key3 = HK_VALUE_key3, 
      HK_key4 = HK_VALUE_key4, 
      HK_key_from = HK_VALUE_key_from, 
      HK_key_out = HK_VALUE_key_out, 
      HK_key_to = HK_VALUE_key_to, 
      HK_keyid = HK_VALUE_keyid, 
      HK_lazy = HK_VALUE_lazy, 
      HK_length = HK_VALUE_length, 
      HK_loop = HK_VALUE_loop, 
      HK_machine = HK_VALUE_machine, 
      HK_machine_e = HK_VALUE_machine_e, 
      HK_machine_g = HK_VALUE_machine_g, 
      HK_machine_v = HK_VALUE_machine_v, 
      HK_marker = HK_VALUE_marker, 
      HK_marker_data = HK_VALUE_marker_data, 
      HK_max_global = HK_VALUE_max_global, 
      HK_max_perfork = HK_VALUE_max_perfork, 
      HK_max_perinstance = HK_VALUE_max_perinstance, 
      HK_mode = HK_VALUE_mode, 
      HK_mode_global = HK_VALUE_mode_global, 
      HK_mode_perfork = HK_VALUE_mode_perfork, 
      HK_mountpoint = HK_VALUE_mountpoint, 
      HK_multiply = HK_VALUE_multiply, 
      HK_multithread = HK_VALUE_multithread, 
      HK_n_initial = HK_VALUE_n_initial, 
      HK_name = HK_VALUE_name, 
      HK_nelements = HK_VALUE_nelements, 
      HK_nelements_min = HK_VALUE_nelements_min, 
      HK_nelements_mul = HK_VALUE_nelements_mul, 
      HK_nelements_step = HK_VALUE_nelements_step, 
      HK_newline = HK_VALUE_newline, 
      HK_notbol = HK_VALUE_notbol, 
      HK_noteol = HK_VALUE_noteol, 
      HK_offset = HK_VALUE_offset, 
      HK_offset_from = HK_VALUE_offset_from, 
      HK_offset_key = HK_VALUE_offset_key, 
      HK_offset_out = HK_VALUE_offset_out, 
      HK_offset_to = HK_VALUE_offset_to, 
      HK_output = HK_VALUE_output, 
      HK_output_type = HK_VALUE_output_type, 
      HK_parameter = HK_VALUE_parameter, 
      HK_parameter_request = HK_VALUE_parameter_request, 
      HK_pass_first = HK_VALUE_pass_first, 
      HK_path = HK_VALUE_path, 
      HK_paused = HK_VALUE_paused, 
      HK_perlevel = HK_VALUE_perlevel, 
      HK_pool_interval = HK_VALUE_pool_interval, 
      HK_port = HK_VALUE_port, 
      HK_random = HK_VALUE_random, 
      HK_read_size = HK_VALUE_read_size, 
      HK_reader = HK_VALUE_reader, 
      HK_readonly = HK_VALUE_readonly, 
      HK_real_offset = HK_VALUE_real_offset, 
      HK_regexp = HK_VALUE_regexp, 
      HK_removed_items = HK_VALUE_removed_items, 
      HK_req_count = HK_VALUE_req_count, 
      HK_req_read = HK_VALUE_req_read, 
      HK_req_rebuild = HK_VALUE_req_rebuild, 
      HK_req_rebuild_destination = HK_VALUE_req_rebuild_destination, 
      HK_req_rebuild_enable = HK_VALUE_req_rebuild_enable, 
      HK_request = HK_VALUE_request, 
      HK_ret = HK_VALUE_ret, 
      HK_retry = HK_VALUE_retry, 
      HK_retry_request = HK_VALUE_retry_request, 
      HK_return = HK_VALUE_return, 
      HK_return_result = HK_VALUE_return_result, 
      HK_return_to = HK_VALUE_return_to, 
      HK_role = HK_VALUE_role, 
      HK_rules = HK_VALUE_rules, 
      HK_script = HK_VALUE_script, 
      HK_size = HK_VALUE_size, 
      HK_source = HK_VALUE_source, 
      HK_split = HK_VALUE_split, 
      HK_string = HK_VALUE_string, 
      HK_structure = HK_VALUE_structure, 
      HK_test = HK_VALUE_test, 
      HK_tick_interval = HK_VALUE_tick_interval, 
      HK_type = HK_VALUE_type, 
      HK_url = HK_VALUE_url, 
      HK_uuid = HK_VALUE_uuid, 
      HK_value = HK_VALUE_value, 
      HK_value_bits = HK_VALUE_value_bits, 
      HK_values = HK_VALUE_values, 
      HK_verbose = HK_VALUE_verbose, 
      HK_writer = HK_VALUE_writer, 
} hashkey_t;
#endif

#ifdef HASHKEYS_C
keypair_t hashkeys[] = {
      { "action", HK_VALUE_action }, 
      { "action_global", HK_VALUE_action_global }, 
      { "action_one", HK_VALUE_action_one }, 
      { "action_perfork", HK_VALUE_action_perfork }, 
      { "action_request", HK_VALUE_action_request }, 
      { "action_request_global", HK_VALUE_action_request_global }, 
      { "action_request_one", HK_VALUE_action_request_one }, 
      { "action_request_perfork", HK_VALUE_action_request_perfork }, 
      { "addr", HK_VALUE_addr }, 
      { "after", HK_VALUE_after }, 
      { "async", HK_VALUE_async }, 
      { "backend", HK_VALUE_backend }, 
      { "before", HK_VALUE_before }, 
      { "benchmark_function", HK_VALUE_benchmark_function }, 
      { "bind", HK_VALUE_bind }, 
      { "block_off", HK_VALUE_block_off }, 
      { "block_size", HK_VALUE_block_size }, 
      { "block_vid", HK_VALUE_block_vid }, 
      { "blocks", HK_VALUE_blocks }, 
      { "body", HK_VALUE_body }, 
      { "buffer", HK_VALUE_buffer }, 
      { "buffer_size", HK_VALUE_buffer_size }, 
      { "capture", HK_VALUE_capture }, 
      { "class", HK_VALUE_class }, 
      { "clientid", HK_VALUE_clientid }, 
      { "close", HK_VALUE_close }, 
      { "config", HK_VALUE_config }, 
      { "connect", HK_VALUE_connect }, 
      { "convert_from", HK_VALUE_convert_from }, 
      { "count", HK_VALUE_count }, 
      { "create", HK_VALUE_create }, 
      { "data", HK_VALUE_data }, 
      { "default", HK_VALUE_default }, 
      { "destination", HK_VALUE_destination }, 
      { "destroy", HK_VALUE_destroy }, 
      { "dns_domain", HK_VALUE_dns_domain }, 
      { "dns_ip", HK_VALUE_dns_ip }, 
      { "dns_tstamp", HK_VALUE_dns_tstamp }, 
      { "dump_last", HK_VALUE_dump_last }, 
      { "engine", HK_VALUE_engine }, 
      { "enum_method", HK_VALUE_enum_method }, 
      { "error", HK_VALUE_error }, 
      { "exclusive", HK_VALUE_exclusive }, 
      { "extended", HK_VALUE_extended }, 
      { "fatal", HK_VALUE_fatal }, 
      { "field", HK_VALUE_field }, 
      { "filename", HK_VALUE_filename }, 
      { "folder", HK_VALUE_folder }, 
      { "force_async", HK_VALUE_force_async }, 
      { "force_sync", HK_VALUE_force_sync }, 
      { "forced", HK_VALUE_forced }, 
      { "fork", HK_VALUE_fork }, 
      { "fork_only", HK_VALUE_fork_only }, 
      { "format", HK_VALUE_format }, 
      { "function", HK_VALUE_function }, 
      { "global", HK_VALUE_global }, 
      { "go_template", HK_VALUE_go_template }, 
      { "hash", HK_VALUE_hash }, 
      { "hash_ptr_end", HK_VALUE_hash_ptr_end }, 
      { "hash_ptr_inline", HK_VALUE_hash_ptr_inline }, 
      { "hash_ptr_null", HK_VALUE_hash_ptr_null }, 
      { "headers", HK_VALUE_headers }, 
      { "homedir", HK_VALUE_homedir }, 
      { "http_req", HK_VALUE_http_req }, 
      { "http_resp", HK_VALUE_http_resp }, 
      { "icase", HK_VALUE_icase }, 
      { "identity", HK_VALUE_identity }, 
      { "ignore_errors", HK_VALUE_ignore_errors }, 
      { "index", HK_VALUE_index }, 
      { "input", HK_VALUE_input }, 
      { "insert", HK_VALUE_insert }, 
      { "item_sample", HK_VALUE_item_sample }, 
      { "item_size", HK_VALUE_item_size }, 
      { "items", HK_VALUE_items }, 
      { "key", HK_VALUE_key }, 
      { "key1", HK_VALUE_key1 }, 
      { "key2", HK_VALUE_key2 }, 
      { "key3", HK_VALUE_key3 }, 
      { "key4", HK_VALUE_key4 }, 
      { "key_from", HK_VALUE_key_from }, 
      { "key_out", HK_VALUE_key_out }, 
      { "key_to", HK_VALUE_key_to }, 
      { "keyid", HK_VALUE_keyid }, 
      { "lazy", HK_VALUE_lazy }, 
      { "length", HK_VALUE_length }, 
      { "loop", HK_VALUE_loop }, 
      { "machine", HK_VALUE_machine }, 
      { "machine_e", HK_VALUE_machine_e }, 
      { "machine_g", HK_VALUE_machine_g }, 
      { "machine_v", HK_VALUE_machine_v }, 
      { "marker", HK_VALUE_marker }, 
      { "marker_data", HK_VALUE_marker_data }, 
      { "max_global", HK_VALUE_max_global }, 
      { "max_perfork", HK_VALUE_max_perfork }, 
      { "max_perinstance", HK_VALUE_max_perinstance }, 
      { "mode", HK_VALUE_mode }, 
      { "mode_global", HK_VALUE_mode_global }, 
      { "mode_perfork", HK_VALUE_mode_perfork }, 
      { "mountpoint", HK_VALUE_mountpoint }, 
      { "multiply", HK_VALUE_multiply }, 
      { "multithread", HK_VALUE_multithread }, 
      { "n_initial", HK_VALUE_n_initial }, 
      { "name", HK_VALUE_name }, 
      { "nelements", HK_VALUE_nelements }, 
      { "nelements_min", HK_VALUE_nelements_min }, 
      { "nelements_mul", HK_VALUE_nelements_mul }, 
      { "nelements_step", HK_VALUE_nelements_step }, 
      { "newline", HK_VALUE_newline }, 
      { "notbol", HK_VALUE_notbol }, 
      { "noteol", HK_VALUE_noteol }, 
      { "offset", HK_VALUE_offset }, 
      { "offset_from", HK_VALUE_offset_from }, 
      { "offset_key", HK_VALUE_offset_key }, 
      { "offset_out", HK_VALUE_offset_out }, 
      { "offset_to", HK_VALUE_offset_to }, 
      { "output", HK_VALUE_output }, 
      { "output_type", HK_VALUE_output_type }, 
      { "parameter", HK_VALUE_parameter }, 
      { "parameter_request", HK_VALUE_parameter_request }, 
      { "pass_first", HK_VALUE_pass_first }, 
      { "path", HK_VALUE_path }, 
      { "paused", HK_VALUE_paused }, 
      { "perlevel", HK_VALUE_perlevel }, 
      { "pool_interval", HK_VALUE_pool_interval }, 
      { "port", HK_VALUE_port }, 
      { "random", HK_VALUE_random }, 
      { "read_size", HK_VALUE_read_size }, 
      { "reader", HK_VALUE_reader }, 
      { "readonly", HK_VALUE_readonly }, 
      { "real_offset", HK_VALUE_real_offset }, 
      { "regexp", HK_VALUE_regexp }, 
      { "removed_items", HK_VALUE_removed_items }, 
      { "req_count", HK_VALUE_req_count }, 
      { "req_read", HK_VALUE_req_read }, 
      { "req_rebuild", HK_VALUE_req_rebuild }, 
      { "req_rebuild_destination", HK_VALUE_req_rebuild_destination }, 
      { "req_rebuild_enable", HK_VALUE_req_rebuild_enable }, 
      { "request", HK_VALUE_request }, 
      { "ret", HK_VALUE_ret }, 
      { "retry", HK_VALUE_retry }, 
      { "retry_request", HK_VALUE_retry_request }, 
      { "return", HK_VALUE_return }, 
      { "return_result", HK_VALUE_return_result }, 
      { "return_to", HK_VALUE_return_to }, 
      { "role", HK_VALUE_role }, 
      { "rules", HK_VALUE_rules }, 
      { "script", HK_VALUE_script }, 
      { "size", HK_VALUE_size }, 
      { "source", HK_VALUE_source }, 
      { "split", HK_VALUE_split }, 
      { "string", HK_VALUE_string }, 
      { "structure", HK_VALUE_structure }, 
      { "test", HK_VALUE_test }, 
      { "tick_interval", HK_VALUE_tick_interval }, 
      { "type", HK_VALUE_type }, 
      { "url", HK_VALUE_url }, 
      { "uuid", HK_VALUE_uuid }, 
      { "value", HK_VALUE_value }, 
      { "value_bits", HK_VALUE_value_bits }, 
      { "values", HK_VALUE_values }, 
      { "verbose", HK_VALUE_verbose }, 
      { "writer", HK_VALUE_writer }, 
      { NULL, 0 }  
};
#endif
