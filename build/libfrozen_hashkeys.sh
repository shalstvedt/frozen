#!/bin/sh

keys=`grep "HK([a-z0-9_]*)" -roha ./ | sed "s/HK(//g" | sed "s/)//g"  | LC_ALL=C sort -u`

folder=src/libfrozen/data/enum/hashkey
hashkeys_h=$folder/hashkeys.h
hashkeys_tmp1=$folder/hashkeys.tmp1
hashkeys_tmp2=$folder/hashkeys.tmp2
hashkeys_tmp3=$folder/hashkeys.tmp3

for key in $keys; do
	value=`echo "$key" | awk '
	BEGIN{ 
		for(i=0;i<=255;i++){_ord[sprintf("%c",i)]=i;};
	}
	{
		sum=0;
		split($0,arr,"");
		for(z in arr){
			sum += _ord[arr[z]]*z*z;
		};
		print sum
	}'`
	
	echo "#define HK_VALUE_$key $value"     >> $hashkeys_tmp1
	echo "      HK_$key = HK_VALUE_$key, "  >> $hashkeys_tmp2
	echo "      { \"$key\", HK_VALUE_$key }, "    >> $hashkeys_tmp3
	
	eval exists="\$COLLIDE_$value"
	if [ "x$exists" != "x" ]; then
		echo "echo 'ERROR: Static hash key collision: $key <=> $exists: $value <=> $value'; exit";
		rm $hashkeys_h $hashkeys_tmp1 $hashkeys_tmp2 $hashkeys_tmp3
		exit;
	fi
	eval "COLLIDE_${value}=$key"
done

echo "/* Autogenerated file. Don't edit */" > $hashkeys_h
echo "#ifndef HASHKEYS_H" >> $hashkeys_h
echo "#define HASHKEYS_H" >> $hashkeys_h
	cat $hashkeys_tmp1 >> $hashkeys_h
	echo "typedef enum hashkey_t {" >> $hashkeys_h
		cat $hashkeys_tmp2 >> $hashkeys_h
	echo "} hashkey_t;" >> $hashkeys_h
echo "#endif" >> $hashkeys_h
echo "" >> $hashkeys_h
echo "#ifdef HASHKEYS_C" >> $hashkeys_h
	echo "keypair_t hashkeys[] = {" >> $hashkeys_h
		cat $hashkeys_tmp3 >> $hashkeys_h
	echo "      { NULL, 0 }  " >> $hashkeys_h
	echo "};" >> $hashkeys_h
echo "#endif" >> $hashkeys_h

rm $hashkeys_tmp1 $hashkeys_tmp2 $hashkeys_tmp3
